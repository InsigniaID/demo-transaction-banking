"""Add QRISTransaction table

Revision ID: f13ca4f32f5b
Revises: 71b1b1b1b1b1
Create Date: 2025-09-11 22:27:48.610839

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f13ca4f32f5b'
down_revision: Union[str, Sequence[str], None] = '71b1b1b1b1b1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('s_employees')  # Drop s_employees first (dependent table)
    op.drop_table('s_departments')
    op.alter_column('users', 'customer_id',
               existing_type=sa.VARCHAR(length=11),
               nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_constraint(op.f('users_customer_id_key'), 'users', type_='unique')
    op.create_index(op.f('ix_users_customer_id'), 'users', ['customer_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_customer_id'), table_name='users')
    op.create_unique_constraint(op.f('users_customer_id_key'), 'users', ['customer_id'], postgresql_nulls_not_distinct=False)
    op.alter_column('users', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'customer_id',
               existing_type=sa.VARCHAR(length=11),
               nullable=True)
    op.create_table('s_departments',
    sa.Column('department_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('department_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('budget', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('department_id', name=op.f('s_departments_pkey'))
    )
    op.create_table('s_employees',
    sa.Column('employee_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('department_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('job_title', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('hire_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('salary', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('manager_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['s_departments.department_id'], name=op.f('s_employees_department_id_fkey')),
    sa.PrimaryKeyConstraint('employee_id', name=op.f('s_employees_pkey')),
    sa.UniqueConstraint('email', name=op.f('s_employees_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
